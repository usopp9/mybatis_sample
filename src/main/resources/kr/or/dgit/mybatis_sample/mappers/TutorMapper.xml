<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.dgit.mybatis_sample.dao.TutorDao">
	<resultMap type="Tutor" id="TutorResult">
		<id property="tutorId" column="tutor_id"></id>
		<result property="name" column="tutor_name"/>
		<result property="email" column="email"/>
		<collection property="courses" resultMap="kr.or.dgit.mybatis_sample.dao.CourseDao.CourseResult"></collection>
	</resultMap>
	
	
	<resultMap type="Tutor" id="TutorWithAddressResult" extends="TutorResult">
		<result property="address.addrId" column="addr_id"/>
		<result property="address.street" column="street"/>
		<result property="address.city" column="city"/>
		<result property="address.state" column="state"/>
		<result property="address.zip" column="zip"/>
		<result property="address.country" column="country"/>
	</resultMap>
	
	<resultMap type="Tutor" id="TutorAssociation" extends="TutorResult">
		<association property="address" resultMap="kr.or.dgit.mybatis_sample.dao.AddressDao.AddressResult">
		
		</association>
	</resultMap>
	
	<sql id="selectSql">
		select t.tutor_id, t.name as tutor_name, email, c.course_id,
		a.addr_id, street, city, state, zip, country, c.name, description,start_date,end_date 
		from tutors t left outer join addresses a on t.addr_id=a.addr_id 
		left outer join courses c on t.tutor_id=c.tutor_id
	</sql>
	
	<sql id="whereSql">
		<where>
			<if test="tutorId != null">
				t.tutor_id=#{tutorId}
			</if>
		</where>
	</sql>
	
	
	<select id="selectTutorByTutorId" parameterType="Tutor" resultMap="TutorAssociation">
		<include refid="selectSql"></include>
		<include refid="whereSql"></include>
	</select>
</mapper>