<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.dgit.mybatis_sample.dao.StudentDao">
	
	<sql id="selectSql">
		SELECT stud_id, name, email, phone FROM students
	</sql>
	
	<sql id="whereSql">
		<where>
			<if test="studId != null">
				stud_id = #{studId}
			</if>
		</where>
	</sql>
	
	
	<select id="selectStudentByNoWithAPI" parameterType="Student" resultType="Student">
		<include refid="selectSql"/>
		<include refid="whereSql"/>
	</select>
	
	<select id="selectStudentByAllWithAPI" resultType="Student">
		<include refid="selectSql"/>
	</select>
	
	<!-- insert -->
	<sql id="insertSql">
		insert into students(stud_id, name, email, phone, dob) 
        values(#{studId}, #{name}, #{email}, #{phone}, #{dob})
	</sql>

	<insert id="insertStudentWithAPI" parameterType="Student">
		<include refid="insertSql"/>
	</insert>
	
	<!-- enum 타입다루기 -->
	<insert id="insertEnumStudentWithAPI" parameterType="Student">
		insert into students(stud_id, name, email, phone, dob,gender) 
        values(#{studId}, #{name}, #{email}, #{phone}, #{dob},#{gender})
	</insert>
	<!-- update -->
	<sql id="updateSql">
		update students set name=#{name}, email=#{email},phone=#{phone},dob=#{dob}
		where stud_id=#{studId}
	</sql>
	<update id="updateStudentWithAPI">
		<include refid="updateSql"/>
	</update>
	
	<!-- delete -->
	<sql id="deleteSql">
		delete from students where stud_id=#{studId};
	</sql>
	<delete id="deleteStudent" parameterType="int">
		<include refid="deleteSql"/>
	</delete>
	
	
	
	
	<sql id="selectSql2">
		SELECT stud_id, name, email, phone ,dob FROM students
	</sql>
	
	<resultMap type="Student" id="StudentResult">
		<id property="studId" column="stud_id"/>
		<result property="name" column="name"/>
		<result property="email" column="email"/>
		<result property="phone" column="phone"/>
		<result property="dob" column="dob"/>
	</resultMap>
	
	<select id="selectStudentByAllWithAPIForResultMap" resultMap="StudentResult">
		<include refid="selectSql2"></include>
	</select>
	
	<select id="selectStudentByAllWithAPIForMap" resultType="map">
		<include refid="selectSql2"></include>
	</select>
	
	
	<resultMap type="Student" id="StudentWithAddressResult" extends="StudentResult">
		<result property="address.addrId" column="addr_id"/>
		<result property="address.street" column="street"/>
		<result property="address.city" column="city"/>
		<result property="address.state" column="state"/>
		<result property="address.zip" column="zip"/>
		<result property="address.country" column="country"/>
	</resultMap>
	
	<sql id="selectJoinAddressSql">
		select stud_id, name, email, phone,dob,a.addr_id, street, city, state, zip, country
		from students s left outer join addresses a on s.addr_id=a.addr_id
	</sql>
	
	<select id="selectStudentByNoForResultMapExtendsWithAPI" parameterType="Student" resultMap="StudentWithAddressResult">
		<include refid="selectJoinAddressSql"></include>
		<include refid="whereSql"></include>
	</select>
	
	
	
	<resultMap type="Student" id="StudentAssociation" extends="StudentResult">
		<association property="address" resultMap="kr.or.dgit.mybatis_sample.dao.AddressDao.AddressResult">	
		</association>
	</resultMap>
	<select id="selectStudentByNoAssociationWithAPI" parameterType="Student" resultMap="StudentAssociation">
		<include refid="selectJoinAddressSql"></include>
		<include refid="whereSql"></include>
	</select>
	
	<!-- 여러개의 파라미터 -->
	<resultMap type="Student" id="StudentGenderResult" extends="StudentResult">
		<result property="gender" column="gender" />
	</resultMap>
	<sql id="selectParameterSql">
		select stud_id, name, email, phone, dob ,gender from students
	</sql>
	<sql id="whereNameEmailSql">
		<where>
			<if test="name != null">
				name=#{name}
			</if>
			<if test="email != null">
				and email=#{email}
			</if>
		</where>
	</sql>
	
	<select id="selectAllStudentByStudentWithAPI" parameterType="Student"
		resultMap="StudentGenderResult">
		<include refid="selectParameterSql"></include>
		<include refid="whereNameEmailSql"></include>
	</select>
	<select id="selectAllStudentByMapWithAPI" parameterType="map"
		resultMap="StudentGenderResult">
		<include refid="selectParameterSql"></include>
		<include refid="whereNameEmailSql"></include>
	</select>
	
	 <!-- ResultSet 처리방식의 재정의 -->
    <select id="selectStudentForMapWithAPI" resultMap="StudentGenderResult">
        	<include refid="selectParameterSql"></include>
    </select>
</mapper>


